<?php

namespace Kunstmaan\FormBundle\Tests\AdminList;

use Kunstmaan\FormBundle\AdminList\FormPageAdminListConfigurator;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-08-29 at 16:39:55.
 */
class FormPageAdminListConfiguratorTest extends \PHPUnit_Framework_TestCase
{
    const PERMISSION_VIEW = 'view';

    protected $securityContext;
    protected $aclHelper;

    /**
     * @var FormPageAdminListConfigurator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->securityContext = $this->getMock('Symfony\Component\Security\Core\SecurityContextInterface');

        $this->aclHelper = $this->getMockBuilder('Kunstmaan\AdminBundle\Helper\Acl\AclHelper')
            ->setMethods(array('apply'))
            ->disableOriginalConstructor()
            ->getMock();

        $this->object = new FormPageAdminListConfigurator($this->securityContext, self::PERMISSION_VIEW, $this->aclHelper);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Kunstmaan\FormBundle\AdminList\FormPageAdminListConfigurator::adaptQueryBuilder
     */
    public function testAdaptQueryBuilder()
    {
        $queryBuilder = $this->getMockBuilder('Doctrine\ORM\QueryBuilder')
            ->disableOriginalConstructor()
            ->getMock();

        $queryBuilder->expects($this->any())
            ->method('innerJoin')
            ->will($this->returnSelf());

        $queryBuilder->expects($this->any())
            ->method('andWhere')
            ->will($this->returnSelf());

        $params = array();

        $this->aclHelper->expects($this->once())
            ->method('apply')
            ->with($queryBuilder, array(self::PERMISSION_VIEW))
            ->will($this->returnValue($queryBuilder));

        $this->object->adaptQueryBuilder($queryBuilder, $params);
    }

}
